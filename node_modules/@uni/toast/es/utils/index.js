function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
import { promisify } from "../_utils/promisify";
export var LONG_DELAY = 3500; // 3.5 seconds
export var SHORT_DELAY = 2000; // 2 seconds
export function styleOptions(options) {
  var DEFAULT_REQUEST_OPTIONS = {
    content: '',
    type: 'none',
    duration: SHORT_DELAY
  };
  if (typeof options === 'string') {
    return _extends({}, DEFAULT_REQUEST_OPTIONS, {
      content: options
    });
  } else {
    return _extends({}, DEFAULT_REQUEST_OPTIONS, options);
  }
}
export function normalize(api) {
  return function (options) {
    var afterOptions = styleOptions(options);
    return promisify(api)(afterOptions);
  };
}